<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="jaeger">
    <xacro:include filename="$(find jaeger_model)/urdf/jaeger_model.urdf"/>

    <!-- OdometryPublisher being used instead of Diff Drive's odometry -->
    <gazebo>
        <plugin
        filename="gz-sim-odometry-publisher-system"
        name="gz::sim::systems::OdometryPublisher">
        <odom_publish_frequency>20</odom_publish_frequency>
        <robot_base_frame>base_link</robot_base_frame>
        <odom_frame>odom</odom_frame>
        </plugin>
    </gazebo>
    <gazebo reference="imu_link">
        <plugin filename="gz-sim-imu-system.so" name="gz::sim::systems::Imu">
        </plugin>
        <sensor name="imu_sensor" type="imu">
            <gz_frame_id>imu_link</gz_frame_id>
            <always_on>1</always_on>
            <update_rate>10</update_rate>
            <visualize>true</visualize>
            <topic>imu</topic>
            <imu>
                <linear_acceleration>
                    <x>
                    <noise type="gaussian">
                        <mean>1</mean>
                        <stddev>0.01</stddev>
                        <dynamic_bias_stddev>0.2</dynamic_bias_stddev>
                        <dynamic_bias_correlation_time>0.1</dynamic_bias_correlation_time>
                    </noise>
                    </x>
                    <y>
                    <noise type="gaussian">
                        <mean>1</mean>
                        <stddev>0.01</stddev>
                        <dynamic_bias_stddev>0.2</dynamic_bias_stddev>
                        <dynamic_bias_correlation_time>0.1</dynamic_bias_correlation_time>
                    </noise>
                    </y>
                    <z>
                    <noise type="gaussian">
                        <mean>1</mean>
                        <stddev>0.1</stddev>
                        <dynamic_bias_stddev>0.1</dynamic_bias_stddev>
                        <dynamic_bias_correlation_time>0.1</dynamic_bias_correlation_time>
                    </noise>
                    </z>
                </linear_acceleration>
                <angular_velocity>
                    <x>
                    <noise type="gaussian">
                        <mean>1</mean>
                        <stddev>0.1</stddev>
                        <dynamic_bias_stddev>0.2</dynamic_bias_stddev>
                        <dynamic_bias_correlation_time>0.1</dynamic_bias_correlation_time>
                    </noise>
                    </x>
                    <y>
                    <noise type="gaussian">
                        <mean>1</mean>
                        <stddev>0.1</stddev>
                        <dynamic_bias_stddev>0.2</dynamic_bias_stddev>
                        <dynamic_bias_correlation_time>0.1</dynamic_bias_correlation_time>
                    </noise>
                    </y>
                    <z>
                    <noise type="gaussian">
                        <mean>1</mean>
                        <stddev>0.1</stddev>
                        <dynamic_bias_stddev>0.2</dynamic_bias_stddev>
                        <dynamic_bias_correlation_time>0.1</dynamic_bias_correlation_time>
                    </noise>
                    </z>
                </angular_velocity>
            </imu>
        </sensor>
    </gazebo>
  
    <!-- <gazebo>
        <plugin
        filename="gz-sim-joint-state-publisher-system"
        name="gz::sim::systems::JointStatePublisher">
        <joint_name>prop1_joint</joint_name>
        <joint_name>prop2_joint</joint_name>
        <joint_name>prop3_joint</joint_name>
        <joint_name>prop4_joint</joint_name>
        </plugin>
    </gazebo> -->



     <ros2_control name="MyRobotHardware" type="system">
      
        <hardware>
          <plugin>jaeger_model/MyRobotHardware</plugin>
          <parameter name="update_rate" value="50"/>
        </hardware>

        
         
        <joint name="x_joint">
          <state_interface name="position"> </state_interface>
        </joint>
        <joint name="y_joint">
          <state_interface name="position"> </state_interface>
        </joint>
        <!-- <sensor name="odom_state">
          <state_interface name="x"/>
          <state_interface name="y"/>
        </sensor> -->

        <gpio name="valve1">
          <command_interface name="digital"></command_interface>
        </gpio>
        <gpio name="valve2">
          <command_interface name="digital"></command_interface>
        </gpio>
        <gpio name="valve3">
          <command_interface name="digital"></command_interface>
        </gpio>
        <gpio name="valve4">
          <command_interface name="digital"></command_interface>
        </gpio>
      </ros2_control>
      

</robot>